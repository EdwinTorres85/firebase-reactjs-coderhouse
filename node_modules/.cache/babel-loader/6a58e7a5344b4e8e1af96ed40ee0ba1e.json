{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Edwin Torres\\\\OneDrive\\\\Escritorio\\\\react prueba 3\\\\test-react-project\\\\src\\\\components\\\\ProductCategoryContainer\\\\ProductCategoryContainer.jsx\",\n    _s = $RefreshSig$();\n\n// lista d epasos para poder renderizar los detalles\n// 1) importar react, hooks: usestate, useEffect...\n// 2) importar useParams para poder matchear los id \n// 3) importamos los componentes y base de datos \n// 4) usamos useEfect para poder incluir con USEPARAMS los id  y asi coincidir solo\n// un elemento de la base de datos (id - 1 porque no tenemos id 0)\n// 5) seteamos el state con la respuesta  de la base de datos y la pasamos al componente ITEMDETAIL\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router\";\nimport './ProductCategoryContainer.css'; // components\n\nimport ProductCategoryList from '../ProductCategoryList/ProductCategoryList'; // data base\n//import database from '../../DATA/data.json'\n\nimport { getFirestore } from '../../FIREBASE/Firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProductCategoryContainer() {\n  _s();\n\n  const [spiner, setSpiner] = useState(true);\n  const [item, setItem] = useState([]);\n  const {\n    category\n  } = useParams();\n  useEffect(() => {\n    setSpiner(true);\n    const db = getFirestore();\n    const itemCollection = db.collection(`items`);\n    itemCollection.get().then(querySnapshot => {\n      // creamos una const asignandole una comparacion que deseemos hacer\n      const filter = querySnapshot.docs.filter(doc => doc.data().category === category);\n\n      if (querySnapshot.size === 0) {\n        console.log('sin items');\n      } else if (filter) {\n        setItem(filter.map(x => x.data())); // con este metodo estamos discriminadno en categorias\n        // si queremos un item individual debemos comparar los id en lugar de category\n        // tenemos que usar el metodo .find en el querySnapshot de {filter} \n      }\n    }).catch(error => {\n      console.log('Error al buscar item...', error);\n    }); // setData(database)\n  }, [category]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PRD-container\",\n    children: item.map((x, index) => /*#__PURE__*/_jsxDEV(ProductCategoryList, {\n      param: x,\n      spiner: spiner\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProductCategoryContainer, \"f4m66Y+KQrMJuhoSJ4TT21b3kUA=\", false, function () {\n  return [useParams];\n});\n\n_c = ProductCategoryContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductCategoryContainer\");","map":{"version":3,"sources":["C:/Users/Edwin Torres/OneDrive/Escritorio/react prueba 3/test-react-project/src/components/ProductCategoryContainer/ProductCategoryContainer.jsx"],"names":["React","useState","useEffect","useParams","ProductCategoryList","getFirestore","ProductCategoryContainer","spiner","setSpiner","item","setItem","category","db","itemCollection","collection","get","then","querySnapshot","filter","docs","doc","data","size","console","log","map","x","catch","error","index"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAO,gCAAP,C,CACA;;AACA,OAAOC,mBAAP,MAAgC,4CAAhC,C,CACA;AACA;;AACA,SAAQC,YAAR,QAA2B,yBAA3B;;AAEA,eAAe,SAASC,wBAAT,GAAoC;AAAA;;AAC/C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAACU,IAAAA;AAAD,MAAaR,SAAS,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,SAAS,CAAC,IAAD,CAAT;AACA,UAAMI,EAAE,GAAIP,YAAY,EAAxB;AACA,UAAMQ,cAAc,GAAGD,EAAE,CAACE,UAAH,CAAe,OAAf,CAAvB;AAEQD,IAAAA,cAAc,CAACE,GAAf,GAAqBC,IAArB,CAA2BC,aAAD,IAAkB;AAChD;AACA,YAAMC,MAAM,GAAGD,aAAa,CAACE,IAAd,CAAmBD,MAAnB,CAA0BE,GAAG,IAAIA,GAAG,CAACC,IAAJ,GAAWV,QAAX,KAAwBA,QAAzD,CAAf;;AACA,UAAGM,aAAa,CAACK,IAAd,KAAuB,CAA1B,EAA6B;AACzBC,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH,OAFD,MAGK,IAAGN,MAAH,EAAU;AACXR,QAAAA,OAAO,CAACQ,MAAM,CAACO,GAAP,CAAWC,CAAC,IAAIA,CAAC,CAACL,IAAF,EAAhB,CAAD,CAAP,CADW,CAEX;AACA;AACA;AACH;AAEJ,KAbO,EAaLM,KAbK,CAaEC,KAAD,IAAW;AAChBL,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCI,KAAvC;AACH,KAfO,EALI,CA4BJ;AAEb,GA9BU,EA8BR,CAACjB,QAAD,CA9BQ,CAAT;AAgCA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,cAOKF,IAAI,CAACgB,GAAL,CAAS,CAACC,CAAD,EAAIG,KAAJ,kBACN,QAAC,mBAAD;AAAiC,MAAA,KAAK,EAAEH,CAAxC;AAA2C,MAAA,MAAM,EAAEnB;AAAnD,OAA0BsB,KAA1B;AAAA;AAAA;AAAA;AAAA,YADH;AAPL;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GAnDuBvB,wB;UAGDH,S;;;KAHCG,wB","sourcesContent":["// lista d epasos para poder renderizar los detalles\r\n// 1) importar react, hooks: usestate, useEffect...\r\n// 2) importar useParams para poder matchear los id \r\n// 3) importamos los componentes y base de datos \r\n// 4) usamos useEfect para poder incluir con USEPARAMS los id  y asi coincidir solo\r\n// un elemento de la base de datos (id - 1 porque no tenemos id 0)\r\n// 5) seteamos el state con la respuesta  de la base de datos y la pasamos al componente ITEMDETAIL\r\n\r\n\r\n\r\n\r\nimport React, {useState, useEffect} from 'react';\r\nimport { useParams } from \"react-router\";\r\nimport './ProductCategoryContainer.css';\r\n// components\r\nimport ProductCategoryList from '../ProductCategoryList/ProductCategoryList'\r\n// data base\r\n//import database from '../../DATA/data.json'\r\nimport {getFirestore} from '../../FIREBASE/Firebase'\r\n\r\nexport default function ProductCategoryContainer() {\r\n    const [spiner, setSpiner] = useState(true)\r\n    const [item, setItem] = useState([])\r\n    const {category} = useParams()\r\n\r\n    useEffect(() => {\r\n        setSpiner(true)\r\n        const db =  getFirestore();\r\n        const itemCollection = db.collection(`items`);\r\n\r\n                itemCollection.get().then((querySnapshot)=> {\r\n            // creamos una const asignandole una comparacion que deseemos hacer\r\n            const filter = querySnapshot.docs.filter(doc => doc.data().category === category);\r\n            if(querySnapshot.size === 0 ){\r\n                console.log('sin items');\r\n            }\r\n            else if(filter){\r\n                setItem(filter.map(x => x.data()) );\r\n                // con este metodo estamos discriminadno en categorias\r\n                // si queremos un item individual debemos comparar los id en lugar de category\r\n                // tenemos que usar el metodo .find en el querySnapshot de {filter} \r\n            }\r\n            \r\n        }).catch((error) => {\r\n            console.log('Error al buscar item...', error);\r\n        })\r\n        \r\n     \r\n        \r\n       \r\n      \r\n        \r\n\r\n                // setData(database)\r\n\r\n\t\t}, [category]);\r\n\r\n    return (\r\n        <div className='PRD-container'>\r\n            {/* {spiner ? \r\n            <h1>HOLACCAPÃ–</h1>\r\n            :\r\n            <>\r\n             </>\r\n            } */}\r\n            {item.map((x, index) =>\r\n                <ProductCategoryList key={index} param={x} spiner={spiner}/> \r\n                )} \r\n            \r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}